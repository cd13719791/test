<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.moyou.moyouRms.dao.statistics.UserFundRegulationDao">
	<!-- UserFundRegulation的resultMap,column是给数据库列起的别名,它对应property类的属性 -->
	<resultMap id="result_UserFundRegulation_Map"
		type="com.moyou.moyouRms.model.statistics.UserFundRegulation">
		<id column="id" property="id" />
		<result column="mode_type" property="modeType" />
		<result column="mode_id" property="modeId" />
		<result column="number" property="number" />
		<result column="create_time" property="createTime" />
	</resultMap>

	<!-- Assist用于辅助工具类setRequires设置的条件,${req.require}表示列名,#{req.value}表示值它是防SQL注入的 -->
	<sql id="Assist">
		<where>
			<foreach collection="require" item="req" separator=" ">
				${req.require} #{req.value}
				<if test="req.suffix != null"> ${req.suffix}</if>
			</foreach>
		</where>
	</sql>

	<!-- updateAssist用于更新数据的使用它拓展自Assist,用于辅助工具类setRequires设置的条件,${req.require}表示列名,#{req.value}表示值它是防SQL注入的 -->
	<sql id="updateAssist">
		<where>
			<foreach collection="assist.require" item="req" separator=" ">
				${req.require} #{req.value}
				<if test="req.suffix != null"> ${req.suffix}</if>
			</foreach>
		</where>
	</sql>

	<!-- 数据库中表名为:t_user_fund_regulation的列名,as前是数据库的列明,as后是列的别名用于映射成实体类中的属性,需要注意的是别名必须与resultMap中的column别名一致 -->
	<sql id="t_user_fund_regulation_Column">
		t_user_fund_regulation.id as id
		,t_user_fund_regulation.mode_type as mode_type
		,t_user_fund_regulation.mode_id as mode_id
		,t_user_fund_regulation.number as number
		,t_user_fund_regulation.create_time as create_time
	</sql>

	<!--获得类名为:UserFundRegulation对应的数据库表的数据总行数 -->
	<select id="getUserFundRegulationRowCount" parameterType="com.moyou.moyouRms.interceptor.Assist"
		resultType="java.lang.Long">
		select count(id) from t_user_fund_regulation
		<if test="require!=null">
			<include refid="Assist" />
		</if>
	</select>
	<!-- 获得类名为:UserFundRegulation对应数据库中表的数据集合 -->
	<select id="selectUserFundRegulation" parameterType="com.moyou.moyouRms.interceptor.Assist"
		resultMap="result_UserFundRegulation_Map">
		select
		<if test="distinct !=null">${distinct}</if>
		<choose>
			<when test="resultColumn!=null">${resultColumn}</when>
			<otherwise>
				<include refid="t_user_fund_regulation_Column" />
			</otherwise>
		</choose>
		from t_user_fund_regulation
		<choose>
			<when test="rowSize ==null">
				<if test="require!=null">
					<include refid="Assist" />
				</if>
				<if test="order !=null">${order}</if>
			</when>
			<otherwise>
				inner join
				(
				SELECT id as primary_key FROM t_user_fund_regulation
				<if test="require!=null">
					<include refid="Assist" />
				</if>
				<if test="order !=null">${order}</if>
				<choose>
					<when test="startRow !=null and rowSize !=null">LIMIT #{startRow},#{rowSize} </when>
					<when test="rowSize !=null">LIMIT #{rowSize}</when>
				</choose>
				) as tmp
				on tmp.primary_key=t_user_fund_regulation.id
			</otherwise>
		</choose>
	</select>

	<!-- 获得一个UserFundRegulation对象,以参数UserFundRegulation对象中不为空的属性作为条件进行查询 -->
	<select id="selectUserFundRegulationByObj"
		parameterType="com.moyou.moyouRms.model.statistics.UserFundRegulation"
		resultMap="result_UserFundRegulation_Map">
		select
		<include refid="t_user_fund_regulation_Column" />
		from t_user_fund_regulation
		<where>
			<if test="createTime != null "> and t_user_fund_regulation.create_time = #{createTime}
			</if>
			<if test="number != null "> and t_user_fund_regulation.number = #{number}</if>
			<if test="modeId != null "> and t_user_fund_regulation.mode_id = #{modeId}</if>
			<if test="modeType != null "> and t_user_fund_regulation.mode_type = #{modeType}</if>
			<if test="id != null "> and t_user_fund_regulation.id = #{id}</if>
		</where>
	</select>

	<!-- 通过UserFundRegulation的id获得对应数据库中表的数据对象 -->
	<select id="selectUserFundRegulationById" parameterType="java.lang.Integer"
		resultMap="result_UserFundRegulation_Map">
		select
		<include refid="t_user_fund_regulation_Column" />
		from t_user_fund_regulation
		where t_user_fund_regulation.id = #{id}
	</select>

	<!-- 将UserFundRegulation插入到对应数据库的表中,包括属性值为null的数据 -->

	<insert id="insertUserFundRegulation"
		parameterType="com.moyou.moyouRms.model.statistics.UserFundRegulation">
		insert into t_user_fund_regulation(id,mode_type,mode_id,number,create_time)
		values(#{id},#{modeType},#{modeId},#{number},#{createTime})
	</insert>

	<!-- 将UserFundRegulation中属性值不为null的数据,插入到对应数据库的表中 -->
	<insert id="insertNonEmptyUserFundRegulation"
		parameterType="com.moyou.moyouRms.model.statistics.UserFundRegulation">
		insert into t_user_fund_regulation
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">id,</if>
			<if test="modeType != null">mode_type,</if>
			<if test="modeId != null">mode_id,</if>
			<if test="number != null">number,</if>
			<if test="createTime != null">create_time,</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null"> #{id},</if>
			<if test="modeType != null"> #{modeType},</if>
			<if test="modeId != null"> #{modeId},</if>
			<if test="number != null"> #{number},</if>
			<if test="createTime != null"> #{createTime},</if>
		</trim>
	</insert>

	<!-- 通过UserFundRegulation的id将数据库表中对应的数据删除 -->
	<delete id="deleteUserFundRegulationById" parameterType="java.lang.Integer">
		delete from t_user_fund_regulation
		where id = #{id}
	</delete>

	<!-- 通过辅助工具Assist中的条件将UserFundRegulation对应的数据库表的数据删除 -->
	<delete id="deleteUserFundRegulation" parameterType="com.moyou.moyouRms.interceptor.Assist">
		delete from t_user_fund_regulation
		<if test="require!=null">
			<include refid="Assist" />
		</if>
	</delete>

	<!-- 通过UserFundRegulation的id将UserFundRegulation的数据更新到数据库中对应的表,包括值null的数据 -->
	<update id="updateUserFundRegulationById"
		parameterType="com.moyou.moyouRms.model.statistics.UserFundRegulation">
		update t_user_fund_regulation set
		mode_type=#{modeType}
		,mode_id=#{modeId}
		,number=#{number}
		,create_time=#{createTime}
		where id=#{id}
	</update>

	<!-- 通过UserFundRegulation的id将UserFundRegulation中属性值不为null的数据更新到数据库对应的表中 -->
	<update id="updateNonEmptyUserFundRegulationById"
		parameterType="com.moyou.moyouRms.model.statistics.UserFundRegulation">
		update t_user_fund_regulation
		<set>
			<if test="modeType != null">
				mode_type=#{modeType},
			</if>
			<if test="modeId != null">
				mode_id=#{modeId},
			</if>
			<if test="number != null">
				number=#{number},
			</if>
			<if test="createTime != null">
				create_time=#{createTime},
			</if>
		</set>
		where id=#{id}
	</update>

	<!-- 通过辅助工具Assist中的条件将UserFundRegulation中的数据更新到数据库对应的表中,包括值为null的数据 -->
	<update id="updateUserFundRegulation" parameterType="map">
		update t_user_fund_regulation
		<set>
			id=#{enti.id},
			mode_type=#{enti.modeType},
			mode_id=#{enti.modeId},
			number=#{enti.number},
			create_time=#{enti.createTime},
		</set>
		<if test="assist.require!=null">
			<include refid="updateAssist" />
		</if>
	</update>

	<!-- 通过辅助工具Assist中的条件将UserFundRegulation中属性值不为null的数据更新到数据库对应的表中 -->
	<update id="updateNonEmptyUserFundRegulation" parameterType="map">
		update t_user_fund_regulation
		<set>
			<if test="enti.id != null">
				id=#{enti.id},
			</if>
			<if test="enti.modeType != null">
				mode_type=#{enti.modeType},
			</if>
			<if test="enti.modeId != null">
				mode_id=#{enti.modeId},
			</if>
			<if test="enti.number != null">
				number=#{enti.number},
			</if>
			<if test="enti.createTime != null">
				create_time=#{enti.createTime},
			</if>
		</set>
		<if test="assist.require!=null">
			<include refid="updateAssist" />
		</if>
	</update>
	<select id="queryUserFundRegulationList" resultMap="result_UserFundRegulation_Map"
		parameterType="java.util.Map">
		SELECT
		tufr.id,
		tufr.mode_type,
		tufr.mode_id,
		sum(tufr.number)number,
		tufr.create_time
		FROM
		t_user_fund_regulation AS tufr
		<where>
			<if test="year != null">
				YEAR (tufr.create_time)=#{year}
				<if test="month != null">
					AND MONTH(tufr.create_time) =#{month}
					<if test="day != null ">
						AND DAY(tufr.create_time) =#{day}
					</if>
				</if>
			</if>
			<if test="day != null and month != null and year != null">
			GROUP BY HOUR(create_time)
			</if>
			<if test="month != null and year != null and day == null">
			GROUP BY DAY(create_time)
			</if>
			<if test="year != null and month == null and day == null">
			GROUP BY MONTH(create_time)
			</if>
		</where>
	</select>
</mapper>