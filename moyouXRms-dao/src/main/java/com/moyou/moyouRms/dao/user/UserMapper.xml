<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.moyou.moyouRms.dao.user.UserMapper">
	<resultMap id="BaseResultMap" type="com.moyou.moyouRms.model.user.User">
		<id column="user_id" property="userId" jdbcType="INTEGER" />
		<result column="account" property="account" jdbcType="VARCHAR" />
		<result column="password" property="password" jdbcType="VARCHAR" />
		<result column="fund_state" property="fundState" jdbcType="INTEGER" />
		<result column="state" property="state" jdbcType="INTEGER" />
		<result column="account_type" property="accountType" jdbcType="INTEGER" />
		<result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
		<result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
		<result column="type" property="type" jdbcType="INTEGER" />
		<result column="nickname" property="nickname" jdbcType="VARCHAR" />
		<result column="push_chat_id" property="pushChatId" jdbcType="VARCHAR" />
		<result column="avatar" property="avatar" jdbcType="VARCHAR" />
		<result column="city" property="city" jdbcType="VARCHAR" />
	</resultMap>
	<sql id="Base_Column_List">
		user_id, account, password, fund_state, state,
		account_type, update_time,
		create_time
	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from t_user
		where user_id = #{userId,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from t_user
		where user_id = #{userId,jdbcType=INTEGER}
	</delete>

	<insert id="insert" parameterType="com.moyou.moyouRms.model.user.User">
		insert into t_user (user_id,
		account, password,
		fund_state, state, account_type,
		update_time,
		create_time)
		values (#{userId,jdbcType=INTEGER},
		#{account,jdbcType=VARCHAR},
		#{password,jdbcType=VARCHAR},
		#{fundState,jdbcType=INTEGER}, #{state,jdbcType=INTEGER},
		#{accountType,jdbcType=INTEGER},
		#{updateTime,jdbcType=TIMESTAMP},
		#{createTime,jdbcType=TIMESTAMP})
	</insert>
	<insert id="insertSelective" parameterType="com.moyou.moyouRms.model.user.User"
		useGeneratedKeys="true" keyProperty="userId">
		insert into t_user
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="userId != null">
				user_id,
			</if>
			<if test="account != null">
				account,
			</if>
			<if test="password != null">
				password,
			</if>
			<if test="fundState != null">
				fund_state,
			</if>
			<if test="state != null">
				state,
			</if>
			<if test="accountType != null">
				account_type,
			</if>
			<if test="updateTime != null">
				update_time,
			</if>
			<if test="createTime != null">
				create_time,
			</if>
			<if test="type != null">
				type,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="userId != null">
				#{userId,jdbcType=INTEGER},
			</if>
			<if test="account != null">
				#{account,jdbcType=VARCHAR},
			</if>
			<if test="password != null">
				#{password,jdbcType=VARCHAR},
			</if>
			<if test="fundState != null">
				#{fundState,jdbcType=INTEGER},
			</if>
			<if test="state != null">
				#{state,jdbcType=INTEGER},
			</if>
			<if test="accountType != null">
				#{accountType,jdbcType=INTEGER},
			</if>
			<if test="updateTime != null">
				#{updateTime,jdbcType=TIMESTAMP},
			</if>
			<if test="createTime != null">
				now(),
			</if>
			<if test="type != null">
				#{type,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.moyou.moyouRms.model.user.User">
		update t_user
		<set>
			<if test="account != null">
				account = #{account,jdbcType=VARCHAR},
			</if>
			<if test="password != null">
				password = #{password,jdbcType=VARCHAR},
			</if>
			<if test="fundState != null">
				fund_state = #{fundState,jdbcType=INTEGER},
			</if>
			<if test="state != null">
				state = #{state,jdbcType=INTEGER},
			</if>
			<if test="accountType != null">
				account_type = #{accountType,jdbcType=INTEGER},
			</if>
			<if test="updateTime != null">
				update_time = #{updateTime,jdbcType=TIMESTAMP},
			</if>
			<if test="createTime != null">
				create_time = #{createTime,jdbcType=TIMESTAMP},
			</if>
		</set>
		where user_id = #{userId,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.moyou.moyouRms.model.user.User">
		update t_user
		set
		account = #{account,jdbcType=VARCHAR},
		password =
		#{password,jdbcType=VARCHAR},
		fund_state =
		#{fundState,jdbcType=INTEGER},
		state = #{state,jdbcType=INTEGER},
		account_type = #{accountType,jdbcType=INTEGER},
		update_time =
		#{updateTime,jdbcType=TIMESTAMP},
		create_time =
		#{createTime,jdbcType=TIMESTAMP}
		where user_id =
		#{userId,jdbcType=INTEGER}
	</update>
	<!-- 每天新增用户 -->
	<select id="selectNewUserCount" resultType="Integer">
		SELECT COUNT(user_id)
		AS
		countNewUser FROM t_user WHERE
		DATEDIFF
		(create_time,NOW()) =0 and
		type=0
	</select>
	<select id="selectOnlineUserCount" resultType="Integer">
		select
		count(tu.user_id) from t_user tu LEFT JOIN t_user_active_info tuai on
		tu.user_id=tuai.user_id where tuai.online_state=1 and tu.type=0
	</select>
	<select id="getUserCountByParams" parameterType="java.util.HashMap"
		resultType="Integer">
		SELECT count(tu.user_id) from t_user tu LEFT JOIN t_user_info tui on
		tu.user_id=tui.user_id
		where tu.type=0
		<if test="gender !=null and gender!=''">
			and tui.gender=#{gender}
		</if>
	</select>
	<select id="getUserCountByQQWEIXIN" resultType="java.util.HashMap">
		SELECT
		count(tu1.user_id)weixin,(select count(tu.user_id) from t_user
		tu where
		tu.account_type=3 and tu.type=0)qq,(select count(tu.user_id)
		from
		t_user tu where tu.account_type=1 and tu.type=0)phone from t_user
		tu1
		where tu1.account_type=2 and tu1.type=0
	</select>
	<!-- 查询假用户，用于群运营，选择群主 -->
	<select id="queryFakeUser" resultType="com.moyou.moyouRms.model.user.User">
		SELECT
		u.user_id AS userId,
		ui.nickname AS nickname,
		ui.push_chat_id AS
		pushChatId,
		ui.avatar AS avatar,
		ui.city
		FROM
		t_user u
		LEFT JOIN
		t_user_info ui ON u.user_id = ui.user_id
		WHERE
		u.TYPE = 1
		<!-- <![CDATA[ -->

		<!-- AND u.user_id <= 27392 -->
		<!-- or u.user_id >= 28394 -->

		<!-- ]]> -->
	</select>
	<select id="selectAllFakeUserForPush" resultType="com.moyou.moyouRms.model.user.User">
		SELECT
		u.user_id AS userId,
		ui.nickname AS nickname,
		ui.push_chat_id AS
		pushChatId,
		ui.avatar AS avatar,
		ui.city
		FROM
		t_user u
		LEFT JOIN
		t_user_info ui ON u.user_id = ui.user_id
		WHERE
		u.TYPE = 1
	</select>
	<select id="queryFakeUserByCity" resultType="com.moyou.moyouRms.model.user.User">
		SELECT
		u.user_id as
		userId,ui.nickname as nickname,ui.push_chat_id as
		pushChatId,ui.avatar
		as avatar FROM t_user u LEFT JOIN t_user_info ui
		ON
		u.user_id=ui.user_id WHERE u.TYPE=1 AND ui.city=#{city}
	</select>
	<select id="queryUserDetailDate" parameterType="java.lang.Integer"
		resultType="java.util.Map">
		SELECT
		tuc.user_talk_count shuoshuo,
		tuc.user_story_folder_count zhuanji,
		tuc.user_interest_count guanzhu,
		tuc.user_serial_check_in_count qiandao,
		tuc.user_secret_count mimi,
		tuc.user_id,
		(
		tuc.user_followers_count
		) fensi,
		(
		SELECT
		create_time
		FROM
		t_user tu
		WHERE
		tu.user_id = tuc.user_id
		) create_time,
		(
		SELECT
		userfund.user_fund
		FROM
		t_user_fund userfund
		WHERE
		userfund.user_id =
		tuc.user_id
		) user_fund,
		(
		SELECT
		tug.user_gold
		FROM
		t_user_gold tug
		WHERE
		tug.user_id =tuc.user_id
		)
		user_gold
		FROM
		t_user_count tuc
		where
		tuc.user_id=#{userId,jdbcType=INTEGER}
	</select>
	<!-- 查询假用户，用于群运营，选择群主分页 -->
	<select id="queryFakeUserList" resultType="com.moyou.moyouRms.model.user.FakeUser"
		parameterType="PageBean">
		SELECT
		u.user_id AS userId,
		ui.nickname AS nickname,
		ui.push_chat_id AS pushChatId,
		ui.avatar AS avatar,
		ui.city
		FROM
		t_user u
		LEFT JOIN t_user_info ui ON u.user_id = ui.user_id
		WHERE
		u.TYPE = 1
	</select>
	<select id="queryFakeUserLimit1" resultMap="BaseResultMap">
		SELECT
		u.user_id as
		userId,ui.nickname as
		nickname,ui.push_chat_id as pushChatId,ui.avatar
		as avatar FROM t_user
		u LEFT JOIN t_user_info ui
		ON
		u.user_id=ui.user_id
		WHERE u.TYPE=1
		order by RAND()
		limit 1
	</select>
	<select id="queryFakeUserForIM" resultType="java.lang.Integer">
		SELECT count(user_id)
		FROM `t_user` where type=1
	</select>
	<select id="queryReallyUserId" resultType="java.lang.Integer">
		SELECT (user_id) FROM
		`t_user` where type=0
	</select>
	<select id="queryAllFakeUser" resultType="com.moyou.moyouRms.model.user.User">
		SELECT
		u.user_id as
		userId
		from t_user u
		LEFT JOIN t_user_count tuc on tuc.user_id=
		u.user_id
		WHERE u.TYPE=1 and
		u.user_id >= 18822 and
		tuc.user_followers_count &lt; 10
	</select>
	<select id="selectDeviceIdByUserId" resultType="java.lang.String"
		parameterType="java.lang.Integer">
		SELECT
		tu.device_id
		FROM
		t_user tu
		where tu.user_id
		=#{userId,jdbcType=INTEGER}
	</select>
	<update id="updateByDeviceId" parameterType="com.moyou.moyouRms.model.user.User">
		update t_user
		<set>
			<if test="state != null">
				state = #{state,jdbcType=INTEGER},
			</if>
		</set>
		where device_id = #{deviceId,jdbcType=INTEGER}
	</update>
	<select id="queryUserCountList" parameterType="com.moyou.moyouRms.model.statistics.NewUser"
		resultType="com.moyou.moyouRms.model.statistics.NewUserResult">
		SELECT
		days,
		count(user_id) AS counts
		FROM
		(
		SELECT
		user_id,
		date_format(create_time,#{dateFormart}) AS days,
		create_time
		FROM
		t_user
		<where>
			<if test="year != null">
				YEAR (create_time) = #{year,jdbcType=INTEGER}
				<if test="month != null">
					AND MONTH (create_time) = #{month,jdbcType=INTEGER}
					<if test="day != null">
						AND DAY (create_time) = #{day,jdbcType=INTEGER}
					</if>
				</if>
			</if>
			and type=0
		</where>
		) AS t
		GROUP BY
		days
	</select>
	<select id="queryFakeUserBySex" parameterType="java.lang.Integer"
		resultType="com.moyou.moyouRms.model.user.User">
		SELECT
		tui.user_id userId
		FROM
		t_user_info tui
		LEFT JOIN t_user tu ON
		tui.user_id = tu.user_id
		WHERE
		tu.type = 1
		<if test="sex != null">
			and gender=#{sex}
		</if>
		ORDER BY RAND() limit 1
	</select>
	<select id="checkIsLiveShower" parameterType="java.lang.Integer"
		resultType="java.lang.Integer">
		SELECT
		count(user_id)
		FROM
		live_user_info
		WHERE
		user_state = 1
		AND user_id = #{userId}
	</select>
</mapper>