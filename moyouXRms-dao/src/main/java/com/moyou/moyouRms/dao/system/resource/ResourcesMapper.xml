<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.moyou.moyouRms.dao.system.resource.ResourcesDao">
	<resultMap id="base" type="BaseResources"></resultMap>
	<resultMap id="ZNodes" type="com.moyou.moyouRms.model.tree.ZNodes"></resultMap>
	<resultMap id="baseAndson" type="BaseResources">
		<id column="ID" jdbcType="VARCHAR" property="id" />
		<collection property="nodes" column="id" ofType="baseAndson"
			select="getSon" />
	</resultMap>
	<select id="findAndson" resultMap="baseAndson" parameterType="BaseResources">
		SELECT t.* FROM sys_BASE_RESOURCES t
		WHERE t.id=#{id}
		ORDER BY
		t.parentId,t.type,t.sort
	</select>
	<select id="find" resultMap="base" parameterType="BaseResources">
		SELECT t.*,jbr.name as parentName FROM sys_BASE_RESOURCES t
		LEFT JOIN
		sys_BASE_RESOURCES jbr
		ON jbr.id=t.parentId
		<where>
		<if test="name != null and name!='' ">
			AND t.name=#{name}
		</if>
		<if test="parentId != null and parentId!='' ">
			AND t.parentId=#{parentId}
		</if>
		<if test="layer != null">
			AND t.layer=#{layer}
		</if>
		<if test="id != null and id!='' ">
			AND t.id=#{id}
		</if>
		</where>
		ORDER BY t.parentId,t.type,t.sort
	</select>
	<select id="findByPageBean" resultMap="base" parameterType="BaseResources">
		SELECT t.* FROM sys_BASE_RESOURCES t <where>
		<if test="param.keyWord!= null">
			AND (t.name like CONCAT('%',#{param.keyWord},'%')
			OR
			t.resUrl like CONCAT('%',#{param.keyWord},'%')
			OR t.description like
			CONCAT('%',#{param.keyWord},'%')
			)
		</if>
		<if test="param.isValid!= null">
			AND t.isValid=#{param.isValid}
		</if>
		</where> 
		ORDER BY t.parentId,t.type,t.sort
	</select>
	<select id="count" resultType="int" parameterType="BaseResources">
		SELECT
		count(*) FROM sys_BASE_RESOURCES t 
	</select>
	<insert id="insert" parameterType="BaseResources">	
 	<![CDATA[
	INSERT INTO sys_BASE_RESOURCES(
	id,name,parentId,layer,type,resUrl,btnId,btnFun,icon,sort,isValid,description,createTime
	) VALUES (
	#{id},#{name},#{parentId},#{layer},#{type},#{resUrl},#{btnId},#{btnFun},#{icon},#{sort},#{isValid},#{description},#{createTime}
	)
	]]>
	</insert>
	<delete id="delete" parameterType="BaseResources">
		DELETE FROM sys_BASE_RESOURCES
		WHERE id=#{id}
	</delete>
	<delete id="delRoleAuthByResId" parameterType="String">
		DELETE from
		sys_BASE_ROLE_RESOURCES
		WHERE resources_id=#{resourcesId}
	</delete>
	<delete id="delOrgAuthByResId" parameterType="String">
		DELETE from
		sys_BASE_ORG_RESOURCES
		WHERE resources_id=#{resourcesId}
	</delete>
	<delete id="deleteBatch" parameterType="java.util.List">
		DELETE FROM sys_BASE_RESOURCES
		WHERE id in(
		<foreach item="o" collection="list" open="" separator=","
			close="">
			#{o.id}
		</foreach>
		)
	</delete>
	<delete id="delBatchRoleAuthByResId" parameterType="java.util.List">
		DELETE from sys_BASE_ROLE_RESOURCES
		WHERE resources_id IN(
		<foreach item="o" collection="list" open="" separator=","
			close="">
			#{o.id}
		</foreach>
		)
	</delete>
	<delete id="delBatchOrgAuthByResId" parameterType="java.util.List">
		DELETE from sys_BASE_ORG_RESOURCES
		WHERE resources_id IN(
		<foreach item="o" collection="list" open="" separator=","
			close="">
			#{o.id}
		</foreach>
		)
	</delete>
	<update id="update" parameterType="BaseResources">
		UPDATE sys_BASE_RESOURCES
		SET
		name=#{name} ,
		parentId=#{parentId},
		type=#{type},
		layer=#{layer},
		resUrl=#{resUrl},
		btnId=#{btnId},
		btnFun=#{btnFun},
		icon=#{icon},
		sort=#{sort},
		isValid=#{isValid},
		description=#{description},
		updateTime
		=#{updateTime}
		WHERE
		id=#{id}
	</update>
	<!-- 菜单树 -->
	<select id="findMenuTree" resultMap="base" parameterType="String">
		SELECT
		jbm.id,jbm.name,jbm.parentId,jbm.type,jbm.resUrl,jbm.icon,jbm.sort,jbm.isValid
		FROM sys_BASE_RESOURCES jbm
		RIGHT JOIN(select jbrm.* from sys_BASE_ROLE
		jbr,sys_BASE_ROLE_RESOURCES jbrm WHERE jbr.id=jbrm.role_id AND
		jbr.isValid=1) t
		ON t.resources_id=jbm.id
		AND t.role_id=ANY(SELECT
		jba.roleId FROM sys_BASE_ACCOUNT jba WHERE
		jba.isValid=1 AND
		jba.id=#{userId})
		WHERE jbm.isValid=1 AND jbm.type=1
		AND
		jbm.layer=#{layer}
		ORDER BY jbm.parentId,jbm.sort
	</select>
	<!-- 按钮列 -->
	<select id="findBtn" resultMap="base" parameterType="java.util.Map">
		SELECT
		jbm.name,jbm.parentId,jbm.type,jbm.resUrl,jbm.btnId,jbm.btnFun,jbm.icon,jbm.sort,jbm.isValid,jbm.layer
		FROM sys_BASE_RESOURCES jbm
		RIGHT JOIN(select jbrm.* from sys_BASE_ROLE
		jbr,sys_BASE_ROLE_RESOURCES jbrm WHERE jbr.id=jbrm.role_id AND
		jbr.isValid=1) t
		ON t.resources_id=jbm.id
		AND t.role_id =ANY(SELECT
		jba.roleId FROM sys_BASE_ACCOUNT jba WHERE
		jba.isValid=1 AND
		jba.id=#{userId})
		WHERE jbm.isValid=1 AND
		jbm.type=#{type}
		AND
		jbm.parentId=#{menuId}
		ORDER BY jbm.sort
	</select>
	<!-- 资源列表只含菜单不含按钮 -->
	<select id="listResources" resultMap="ZNodes" parameterType="BaseResources">
		SELECT t.id as id,
		t.name as name,
		t.parentId as pId
		FROM
		sys_BASE_RESOURCES t WHERE t.type=1 AND t.layer=#{layer}
		ORDER BY
		t.parentId,t.sort
	</select>
	<select id="resAuthorized" resultMap="base" parameterType="java.util.Map">
		SELECT jbm.resUrl
		FROM sys_BASE_RESOURCES jbm
		RIGHT JOIN(select jbrm.*
		from sys_BASE_ROLE
		jbr,sys_BASE_ROLE_RESOURCES jbrm WHERE
		jbr.id=jbrm.role_id AND
		jbr.isValid=1) t
		ON t.resources_id=jbm.id
		AND
		t.role_id =ANY(SELECT jba.roleId FROM sys_BASE_ACCOUNT jba WHERE
		jba.isValid=1 AND jba.id=#{userId})
		WHERE jbm.isValid=1 AND
		jbm.type=#{type}
	</select>
	<select id="childCount" resultType="int" parameterType="BaseResources">
		SELECT
		count(*) FROM sys_BASE_RESOURCES t WHERE t.parentId=#{parentId}
	</select>
	<select id="childBatchCount" resultType="int" parameterType="BaseResources">
		SELECT count(*) FROM sys_BASE_RESOURCES t WHERE t.parentId IN(
		<foreach item="o" collection="list" open="" separator=","
			close="">
			#{o.id}
		</foreach>
		)
	</select>
	<select id="getSon" parameterType="String" resultMap="baseAndson">
		SELECT
		jbr.* FROM sys_BASE_RESOURCES jbr
		WHERE jbr.parentId=#{id}
		ORDER BY
		jbr.parentId,jbr.type,jbr.sort
	</select>
	<update id="updateBatchLayer" parameterType="Map">
		UPDATE sys_BASE_RESOURCES SET
		layer=#{layer}
		WHERE id IN(
		<foreach item="o" collection="list" open="" separator=","
			close="">
			#{o}
		</foreach>
		)
	</update>
	<select id="validata" parameterType="java.util.Map" resultType="java.lang.Integer">
		SELECT
		count(sbr.id)
		FROM
		sys_base_resources sbr
		LEFT JOIN sys_base_role_resources sbrr on sbrr.resources_id=sbr.id
		LEFT JOIN sys_base_account_role sbar ON sbar.role_id = sbrr.role_id
		WHERE
		sbar.account_id =#{accountId}
		AND sbr.resUrl =#{method}
	</select>
</mapper>