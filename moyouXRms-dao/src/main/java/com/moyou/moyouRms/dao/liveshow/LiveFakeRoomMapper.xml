<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.moyou.moyouRms.dao.liveshow.LiveFakeRoomDao">
	<!-- LiveFakeRoom的resultMap,column是给数据库列起的别名,它对应property类的属性 -->
	<resultMap id="result_LiveFakeRoom_Map"
		type="com.moyou.moyouRms.model.liveshow.LiveFakeRoom">
		<id column="id" property="id" />
		<result column="user_id" property="userId" />
		<result column="room_id" property="roomId" />
		<result column="room_name" property="roomName" />
		<result column="room_count" property="roomCount" />
		<result column="room_desc" property="roomDesc" />
		<result column="consume" property="consume" />
		<result column="cover" property="cover" />
		<result column="live_seconds" property="liveSeconds" />
		<result column="city" property="city" />
		<result column="password" property="password" />
		<result column="live_state" property="liveState" />
		<result column="room_state" property="roomState" />
		<result column="update_time" property="updateTime" />
		<result column="create_time" property="createTime" />
		<result column="prev_live_start_time" property="prevLiveStartTime" />
		<result column="prev_live_end_time" property="prevLiveEndTime" />
		<result column="recommend_tme" property="recommendTme" />
		<result column="recommend_state" property="recommendState" />
		<result column="recommend_sort" property="recommendSort" />
		<result column="biz_room_id" property="bizRoomId" />
	</resultMap>

	<!-- Assist用于辅助工具类setRequires设置的条件,${req.require}表示列名,#{req.value}表示值它是防SQL注入的 -->
	<sql id="Assist">
		<where>
			<foreach collection="require" item="req" separator=" ">
				${req.require} #{req.value}
				<if test="req.suffix != null"> ${req.suffix}</if>
			</foreach>
		</where>
	</sql>

	<!-- updateAssist用于更新数据的使用它拓展自Assist,用于辅助工具类setRequires设置的条件,${req.require}表示列名,#{req.value}表示值它是防SQL注入的 -->
	<sql id="updateAssist">
		<where>
			<foreach collection="assist.require" item="req" separator=" ">
				${req.require} #{req.value}
				<if test="req.suffix != null"> ${req.suffix}</if>
			</foreach>
		</where>
	</sql>

	<!-- 数据库中表名为:live_fake_room的列名,as前是数据库的列明,as后是列的别名用于映射成实体类中的属性,需要注意的是别名必须与resultMap中的column别名一致 -->
	<sql id="live_fake_room_Column">
		live_fake_room.id as id
		,live_fake_room.user_id as user_id
		,live_fake_room.room_id as room_id
		,live_fake_room.room_name as
		room_name
		,live_fake_room.room_count as room_count
		,live_fake_room.room_desc as room_desc
		,live_fake_room.consume as
		consume
		,live_fake_room.cover as cover
		,live_fake_room.live_seconds as
		live_seconds
		,live_fake_room.city as city
		,live_fake_room.password as
		password
		,live_fake_room.live_state as live_state
		,live_fake_room.room_state as room_state
		,live_fake_room.update_time as
		update_time
		,live_fake_room.create_time as create_time
		,live_fake_room.prev_live_start_time as prev_live_start_time
		,live_fake_room.prev_live_end_time as prev_live_end_time
		,live_fake_room.recommend_tme as recommend_tme
		,live_fake_room.recommend_state as recommend_state
		,live_fake_room.recommend_sort as recommend_sort
		,live_fake_room.biz_room_id as biz_room_id
	</sql>

	<!--获得类名为:LiveFakeRoom对应的数据库表的数据总行数 -->
	<select id="getLiveFakeRoomRowCount" parameterType="com.moyou.moyouRms.interceptor.Assist"
		resultType="java.lang.Long">
		select count(id) from live_fake_room
		<if test="require!=null">
			<include refid="Assist" />
		</if>
	</select>
	<!-- 获得类名为:LiveFakeRoom对应数据库中表的数据集合 -->
	<select id="selectLiveFakeRoom" parameterType="com.moyou.moyouRms.interceptor.Assist"
		resultMap="result_LiveFakeRoom_Map">
		select
		<if test="distinct !=null">${distinct}</if>
		<choose>
			<when test="resultColumn!=null">${resultColumn}</when>
			<otherwise>
				<include refid="live_fake_room_Column" />
			</otherwise>
		</choose>
		from live_fake_room
		<choose>
			<when test="rowSize ==null">
				<if test="require!=null">
					<include refid="Assist" />
				</if>
				<if test="order !=null">${order}</if>
			</when>
			<otherwise>
				inner join
				(
				SELECT id as primary_key FROM live_fake_room
				<if test="require!=null">
					<include refid="Assist" />
				</if>
				<if test="order !=null">${order}</if>
				<choose>
					<when test="startRow !=null and rowSize !=null">LIMIT #{startRow},#{rowSize} </when>
					<when test="rowSize !=null">LIMIT #{rowSize}</when>
				</choose>
				) as tmp
				on tmp.primary_key=live_fake_room.id
			</otherwise>
		</choose>
	</select>

	<!-- 获得一个LiveFakeRoom对象,以参数LiveFakeRoom对象中不为空的属性作为条件进行查询 -->
	<select id="selectLiveFakeRoomByObj" parameterType="com.moyou.moyouRms.model.liveshow.LiveFakeRoom"
		resultMap="result_LiveFakeRoom_Map">
		select
		<include refid="live_fake_room_Column" />
		from live_fake_room
		<where>
			<if test="bizRoomId != null "> and live_fake_room.biz_room_id = #{bizRoomId}</if>
			<if test="recommendSort != null "> and live_fake_room.recommend_sort = #{recommendSort}
			</if>
			<if test="recommendState != null "> and live_fake_room.recommend_state = #{recommendState}
			</if>
			<if test="recommendTme != null "> and live_fake_room.recommend_tme = #{recommendTme}</if>
			<if test="prevLiveEndTime != null "> and live_fake_room.prev_live_end_time =
				#{prevLiveEndTime}
			</if>
			<if test="prevLiveStartTime != null "> and live_fake_room.prev_live_start_time =
				#{prevLiveStartTime}
			</if>
			<if test="createTime != null "> and live_fake_room.create_time = #{createTime}</if>
			<if test="updateTime != null "> and live_fake_room.update_time = #{updateTime}</if>
			<if test="roomState != null "> and live_fake_room.room_state = #{roomState}</if>
			<if test="liveState != null "> and live_fake_room.live_state = #{liveState}</if>
			<if test="password != null "> and live_fake_room.password = #{password}</if>
			<if test="city != null "> and live_fake_room.city = #{city}</if>
			<if test="liveSeconds != null "> and live_fake_room.live_seconds = #{liveSeconds}</if>
			<if test="cover != null "> and live_fake_room.cover = #{cover}</if>
			<if test="consume != null "> and live_fake_room.consume = #{consume}</if>
			<if test="roomDesc != null "> and live_fake_room.room_desc = #{roomDesc}</if>
			<if test="roomCount != null "> and live_fake_room.room_count = #{roomCount}</if>
			<if test="roomName != null "> and live_fake_room.room_name = #{roomName}</if>
			<if test="roomId != null "> and live_fake_room.room_id = #{roomId}</if>
			<if test="userId != null "> and live_fake_room.user_id = #{userId}</if>
			<if test="id != null "> and live_fake_room.id = #{id}</if>
		</where>
	</select>

	<!-- 通过LiveFakeRoom的id获得对应数据库中表的数据对象 -->
	<select id="selectLiveFakeRoomById" parameterType="java.lang.Integer"
		resultMap="result_LiveFakeRoom_Map">
		select
		<include refid="live_fake_room_Column" />
		from live_fake_room
		where live_fake_room.id = #{id}
	</select>

	<!-- 将LiveFakeRoom插入到对应数据库的表中,包括属性值为null的数据 -->

	<insert id="insertLiveFakeRoom" parameterType="com.moyou.moyouRms.model.liveshow.LiveFakeRoom">
		insert into
		live_fake_room(id,user_id,room_id,room_name,room_count,room_desc,consume,cover,live_seconds,city,password,live_state,room_state,update_time,create_time,prev_live_start_time,prev_live_end_time,recommend_tme,recommend_state,recommend_sort,biz_room_id)
		values(#{id},#{userId},#{roomId},#{roomName},#{roomCount},#{roomDesc},#{consume},#{cover},#{liveSeconds},#{city},#{password},#{liveState},#{roomState},#{updateTime},#{createTime},#{prevLiveStartTime},#{prevLiveEndTime},#{recommendTme},#{recommendState},#{recommendSort},#{bizRoomId})
	</insert>

	<!-- 将LiveFakeRoom中属性值不为null的数据,插入到对应数据库的表中 -->
	<insert id="insertNonEmptyLiveFakeRoom" parameterType="com.moyou.moyouRms.model.liveshow.LiveFakeRoom">
		insert into live_fake_room
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">id,</if>
			<if test="userId != null">user_id,</if>
			<if test="roomId != null">room_id,</if>
			<if test="roomName != null">room_name,</if>
			<if test="roomCount != null">room_count,</if>
			<if test="roomDesc != null">room_desc,</if>
			<if test="consume != null">consume,</if>
			<if test="cover != null">cover,</if>
			<if test="liveSeconds != null">live_seconds,</if>
			<if test="city != null">city,</if>
			<if test="password != null">password,</if>
			<if test="liveState != null">live_state,</if>
			<if test="roomState != null">room_state,</if>
			<if test="updateTime != null">update_time,</if>
			<if test="createTime != null">create_time,</if>
			<if test="prevLiveStartTime != null">prev_live_start_time,</if>
			<if test="prevLiveEndTime != null">prev_live_end_time,</if>
			<if test="recommendTme != null">recommend_tme,</if>
			<if test="recommendState != null">recommend_state,</if>
			<if test="recommendSort != null">recommend_sort,</if>
			<if test="bizRoomId != null">biz_room_id,</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null"> #{id},</if>
			<if test="userId != null"> #{userId},</if>
			<if test="roomId != null"> #{roomId},</if>
			<if test="roomName != null"> #{roomName},</if>
			<if test="roomCount != null"> #{roomCount},</if>
			<if test="roomDesc != null"> #{roomDesc},</if>
			<if test="consume != null"> #{consume},</if>
			<if test="cover != null"> #{cover},</if>
			<if test="liveSeconds != null"> #{liveSeconds},</if>
			<if test="city != null"> #{city},</if>
			<if test="password != null"> #{password},</if>
			<if test="liveState != null"> #{liveState},</if>
			<if test="roomState != null"> #{roomState},</if>
			<if test="updateTime != null"> #{updateTime},</if>
			<if test="createTime != null"> #{createTime},</if>
			<if test="prevLiveStartTime != null"> #{prevLiveStartTime},</if>
			<if test="prevLiveEndTime != null"> #{prevLiveEndTime},</if>
			<if test="recommendTme != null"> #{recommendTme},</if>
			<if test="recommendState != null"> #{recommendState},</if>
			<if test="recommendSort != null"> #{recommendSort},</if>
			<if test="bizRoomId != null"> #{bizRoomId},</if>
		</trim>
	</insert>

	<!-- 通过LiveFakeRoom的id将数据库表中对应的数据删除 -->
	<delete id="deleteLiveFakeRoomById" parameterType="java.lang.Integer">
		delete from
		live_fake_room
		where id = #{id}
	</delete>

	<!-- 通过辅助工具Assist中的条件将LiveFakeRoom对应的数据库表的数据删除 -->
	<delete id="deleteLiveFakeRoom" parameterType="com.moyou.moyouRms.interceptor.Assist">
		delete from live_fake_room
		<if test="require!=null">
			<include refid="Assist" />
		</if>
	</delete>

	<!-- 通过LiveFakeRoom的id将LiveFakeRoom的数据更新到数据库中对应的表,包括值null的数据 -->
	<update id="updateLiveFakeRoomById" parameterType="com.moyou.moyouRms.model.liveshow.LiveFakeRoom">
		update
		live_fake_room set
		user_id=#{userId}
		,room_id=#{roomId}
		,room_name=#{roomName}
		,room_count=#{roomCount}
		,room_desc=#{roomDesc}
		,consume=#{consume}
		,cover=#{cover}
		,live_seconds=#{liveSeconds}
		,city=#{city}
		,password=#{password}
		,live_state=#{liveState}
		,room_state=#{roomState}
		,update_time=#{updateTime}
		,create_time=#{createTime}
		,prev_live_start_time=#{prevLiveStartTime}
		,prev_live_end_time=#{prevLiveEndTime}
		,recommend_tme=#{recommendTme}
		,recommend_state=#{recommendState}
		,recommend_sort=#{recommendSort}
		,biz_room_id=#{bizRoomId}
		where id=#{id}
	</update>

	<!-- 通过LiveFakeRoom的id将LiveFakeRoom中属性值不为null的数据更新到数据库对应的表中 -->
	<update id="updateNonEmptyLiveFakeRoomById" parameterType="com.moyou.moyouRms.model.liveshow.LiveFakeRoom">
		update live_fake_room
		<set>
			<if test="userId != null">
				user_id=#{userId},
			</if>
			<if test="roomId != null">
				room_id=#{roomId},
			</if>
			<if test="roomName != null">
				room_name=#{roomName},
			</if>
			<if test="roomCount != null">
				room_count=#{roomCount},
			</if>
			<if test="roomDesc != null">
				room_desc=#{roomDesc},
			</if>
			<if test="consume != null">
				consume=#{consume},
			</if>
			<if test="cover != null">
				cover=#{cover},
			</if>
			<if test="liveSeconds != null">
				live_seconds=#{liveSeconds},
			</if>
			<if test="city != null">
				city=#{city},
			</if>
			<if test="password != null">
				password=#{password},
			</if>
			<if test="liveState != null">
				live_state=#{liveState},
			</if>
			<if test="roomState != null">
				room_state=#{roomState},
			</if>
			<if test="updateTime != null">
				update_time=#{updateTime},
			</if>
			<if test="createTime != null">
				create_time=#{createTime},
			</if>
			<if test="prevLiveStartTime != null">
				prev_live_start_time=#{prevLiveStartTime},
			</if>
			<if test="prevLiveEndTime != null">
				prev_live_end_time=#{prevLiveEndTime},
			</if>
			<if test="recommendTme != null">
				recommend_tme=#{recommendTme},
			</if>
			<if test="recommendState != null">
				recommend_state=#{recommendState},
			</if>
			<if test="recommendSort != null">
				recommend_sort=#{recommendSort},
			</if>
			<if test="bizRoomId != null">
				biz_room_id=#{bizRoomId},
			</if>
		</set>
		where id=#{id}
	</update>

	<!-- 通过辅助工具Assist中的条件将LiveFakeRoom中的数据更新到数据库对应的表中,包括值为null的数据 -->
	<update id="updateLiveFakeRoom" parameterType="map">
		update live_fake_room
		<set>
			id=#{enti.id},
			user_id=#{enti.userId},
			room_id=#{enti.roomId},
			room_name=#{enti.roomName},
			room_count=#{enti.roomCount},
			room_desc=#{enti.roomDesc},
			consume=#{enti.consume},
			cover=#{enti.cover},
			live_seconds=#{enti.liveSeconds},
			city=#{enti.city},
			password=#{enti.password},
			live_state=#{enti.liveState},
			room_state=#{enti.roomState},
			update_time=#{enti.updateTime},
			create_time=#{enti.createTime},
			prev_live_start_time=#{enti.prevLiveStartTime},
			prev_live_end_time=#{enti.prevLiveEndTime},
			recommend_tme=#{enti.recommendTme},
			recommend_state=#{enti.recommendState},
			recommend_sort=#{enti.recommendSort},
			biz_room_id=#{enti.bizRoomId},
		</set>
		<if test="assist.require!=null">
			<include refid="updateAssist" />
		</if>
	</update>

	<!-- 通过辅助工具Assist中的条件将LiveFakeRoom中属性值不为null的数据更新到数据库对应的表中 -->
	<update id="updateNonEmptyLiveFakeRoom" parameterType="map">
		update live_fake_room
		<set>
			<if test="enti.id != null">
				id=#{enti.id},
			</if>
			<if test="enti.userId != null">
				user_id=#{enti.userId},
			</if>
			<if test="enti.roomId != null">
				room_id=#{enti.roomId},
			</if>
			<if test="enti.roomName != null">
				room_name=#{enti.roomName},
			</if>
			<if test="enti.roomCount != null">
				room_count=#{enti.roomCount},
			</if>
			<if test="enti.roomDesc != null">
				room_desc=#{enti.roomDesc},
			</if>
			<if test="enti.consume != null">
				consume=#{enti.consume},
			</if>
			<if test="enti.cover != null">
				cover=#{enti.cover},
			</if>
			<if test="enti.liveSeconds != null">
				live_seconds=#{enti.liveSeconds},
			</if>
			<if test="enti.city != null">
				city=#{enti.city},
			</if>
			<if test="enti.password != null">
				password=#{enti.password},
			</if>
			<if test="enti.liveState != null">
				live_state=#{enti.liveState},
			</if>
			<if test="enti.roomState != null">
				room_state=#{enti.roomState},
			</if>
			<if test="enti.updateTime != null">
				update_time=#{enti.updateTime},
			</if>
			<if test="enti.createTime != null">
				create_time=#{enti.createTime},
			</if>
			<if test="enti.prevLiveStartTime != null">
				prev_live_start_time=#{enti.prevLiveStartTime},
			</if>
			<if test="enti.prevLiveEndTime != null">
				prev_live_end_time=#{enti.prevLiveEndTime},
			</if>
			<if test="enti.recommendTme != null">
				recommend_tme=#{enti.recommendTme},
			</if>
			<if test="enti.recommendState != null">
				recommend_state=#{enti.recommendState},
			</if>
			<if test="enti.recommendSort != null">
				recommend_sort=#{enti.recommendSort},
			</if>
			<if test="enti.bizRoomId != null">
				biz_room_id=#{enti.bizRoomId},
			</if>
		</set>
		<if test="assist.require!=null">
			<include refid="updateAssist" />
		</if>
	</update>
	<select id="selectLiveFakeRoomList" parameterType="PageBean"
		resultType="com.moyou.moyouRms.model.liveshow.LiveFakeRoom">
		SELECT
		lfr.id AS id,
		lfr.room_name AS roomName,
		lfr.create_time AS createTime,
		lfr.prev_live_start_time AS
		prevLiveStartTime,
		lfr.prev_live_end_time AS prevLiveEndTime,
		lfr.recommend_tme AS recommendTme
		FROM
		live_fake_room AS lfr
		order by
		lfr.id DESC
	</select>
	<select id="selectLiveFakeRoomEditById" resultType="com.moyou.moyouRms.model.liveshow.LiveFakeRoomEdit">
		SELECT
		lfr.id
		AS id,
		lfr.room_name AS roomName,
		lfr.cover AS cover,
		lfr.city AS city,
		lfr.consume AS consume
		FROM
		live_fake_room AS lfr
		WHERE
		lfr.id = #{id}
	</select>
	<select id="selectLiveUserCount" resultType="java.util.Map">
		SELECT
		count(id) number
		FROM
		live_fake_room
	</select>
	<select id="selectLiveFakeRoomSet" resultType="com.moyou.moyouRms.model.po.task.TaskSeting">
		SELECT
		sts.id AS
		id,
		sts.interval_second AS intervalSecond,
		sts.execute_data_count AS
		executeDataCount
		FROM
		sys_task_seting AS sts
		WHERE
		sts.mode_type = 10

	</select>
	<update id="updateLiveFakeNoRecomment">
		UPDATE live_fake_room
		SET recommend_state = 0,
		prev_live_end_time = now(),
		prev_live_start_time = recommend_tme
		WHERE
		recommend_state = 1
	</update>
	<select id="selectLiveFakeRoomLimit" resultMap="result_LiveFakeRoom_Map"
		parameterType="java.lang.Integer">
		SELECT
		lfr.id,
		lfr.user_id,
		lfr.room_id,
		lfr.room_name,
		lfr.room_count,
		lfr.room_desc,
		lfr.consume,
		lfr.cover,
		lfr.live_seconds,
		lfr.city,
		lfr.`password`,
		lfr.live_state,
		lfr.room_state,
		lfr.update_time,
		lfr.create_time,
		lfr.prev_live_start_time,
		lfr.prev_live_end_time,
		lfr.recommend_tme,
		lfr.recommend_state,
		lfr.recommend_sort,
		lfr.biz_room_id
		FROM
		live_fake_room AS lfr
		order by rand()
		limit #{count}
	</select>
</mapper>